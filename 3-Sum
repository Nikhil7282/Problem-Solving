//HashMap and HashSet
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> list=new ArrayList<>();
        Arrays.sort(nums);
        if(nums[0]>0 || nums.length<=2){
            return list;
        }
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],i);
        }
        Set<String> hash=new HashSet<>();
        for(int i=0;i<nums.length-2;i++){
            for(int j=i+1;j<nums.length-1;j++){
                int curr=nums[i]+nums[j];
                if(map.containsKey(-1*curr)){
                    int index=map.get(-1*curr);
                if( !hash.contains(nums[i]+":"+nums[j]+":"+nums[index]) && index>i && index>j){
                    list.add(Arrays.asList(nums[i],nums[j],nums[index]));
                    hash.add(nums[i]+":"+nums[j]+":"+nums[index]);
                }
                }
            }
        }
    return list;
    }
}
